#ifndef _INC_1553_H
#define _INC_1553_H
/*
Code automatically generated by asn1scc tool
Date was: 1/24/2011
Time was: 20:29:04
*/

#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef asn1SccSint __po_hi_c_Node_Addr_T;

#define __po_hi_c_Node_Addr_T_REQUIRED_BYTES_FOR_ENCODING        1
#define __po_hi_c_Node_Addr_T_REQUIRED_BITS_FOR_ENCODING        5
#define __po_hi_c_Node_Addr_T_REQUIRED_BYTES_FOR_ACN_ENCODING       1
#define __po_hi_c_Node_Addr_T_REQUIRED_BITS_FOR_ACN_ENCODING        5

#ifndef ERR___po_hi_c_Node_Addr_T 
#define ERR___po_hi_c_Node_Addr_T		1000 /* (0..31) */
#endif

void __po_hi_c_Node_Addr_T_Initialize(__po_hi_c_Node_Addr_T* pVal);
flag __po_hi_c_Node_Addr_T_IsConstraintValid(const __po_hi_c_Node_Addr_T* val, int* pErrCode);
flag __po_hi_c_Node_Addr_T_Equal(const __po_hi_c_Node_Addr_T* val1, const __po_hi_c_Node_Addr_T* val2);



typedef enum {
    __po_hi_c_mil1553a = 0,
    __po_hi_c_mil1553b = 1
} __po_hi_c_Standard_T;

#define __po_hi_c_Standard_T_REQUIRED_BYTES_FOR_ENCODING        1
#define __po_hi_c_Standard_T_REQUIRED_BITS_FOR_ENCODING        1
#define __po_hi_c_Standard_T_REQUIRED_BYTES_FOR_ACN_ENCODING       1
#define __po_hi_c_Standard_T_REQUIRED_BITS_FOR_ACN_ENCODING        1

#ifndef ERR___po_hi_c_Standard_T_unknown_enumeration_value 
#define ERR___po_hi_c_Standard_T_unknown_enumeration_value		1001 /* invalid enumeration value */
#endif

void __po_hi_c_Standard_T_Initialize(__po_hi_c_Standard_T* pVal);
flag __po_hi_c_Standard_T_IsConstraintValid(const __po_hi_c_Standard_T* val, int* pErrCode);
flag __po_hi_c_Standard_T_Equal(const __po_hi_c_Standard_T* val1, const __po_hi_c_Standard_T* val2);



typedef enum {
    __po_hi_c_controller = 0,
    __po_hi_c_terminal = 1,
    __po_hi_c_monitor = 2
} __po_hi_c_Mode_T;

#define __po_hi_c_Mode_T_REQUIRED_BYTES_FOR_ENCODING        1
#define __po_hi_c_Mode_T_REQUIRED_BITS_FOR_ENCODING        2
#define __po_hi_c_Mode_T_REQUIRED_BYTES_FOR_ACN_ENCODING       1
#define __po_hi_c_Mode_T_REQUIRED_BITS_FOR_ACN_ENCODING        2

#ifndef ERR___po_hi_c_Mode_T_unknown_enumeration_value 
#define ERR___po_hi_c_Mode_T_unknown_enumeration_value		1002 /* invalid enumeration value */
#endif

void __po_hi_c_Mode_T_Initialize(__po_hi_c_Mode_T* pVal);
flag __po_hi_c_Mode_T_IsConstraintValid(const __po_hi_c_Mode_T* val, int* pErrCode);
flag __po_hi_c_Mode_T_Equal(const __po_hi_c_Mode_T* val1, const __po_hi_c_Mode_T* val2);



typedef enum {
    __po_hi_c_none = 0,
    __po_hi_c_bus_a = 1,
    __po_hi_c_bus_b = 2,
    __po_hi_c_both = 3
} __po_hi_c_Bus_T;

#define __po_hi_c_Bus_T_REQUIRED_BYTES_FOR_ENCODING        1
#define __po_hi_c_Bus_T_REQUIRED_BITS_FOR_ENCODING        2
#define __po_hi_c_Bus_T_REQUIRED_BYTES_FOR_ACN_ENCODING       1
#define __po_hi_c_Bus_T_REQUIRED_BITS_FOR_ACN_ENCODING        2

#ifndef ERR___po_hi_c_Bus_T_unknown_enumeration_value 
#define ERR___po_hi_c_Bus_T_unknown_enumeration_value		1003 /* invalid enumeration value */
#endif

void __po_hi_c_Bus_T_Initialize(__po_hi_c_Bus_T* pVal);
flag __po_hi_c_Bus_T_IsConstraintValid(const __po_hi_c_Bus_T* val, int* pErrCode);
flag __po_hi_c_Bus_T_Equal(const __po_hi_c_Bus_T* val1, const __po_hi_c_Bus_T* val2);



typedef struct {
    char devname[21];
    __po_hi_c_Standard_T standard;
    __po_hi_c_Mode_T mode;
    __po_hi_c_Bus_T bus;
    __po_hi_c_Node_Addr_T termaddr;
    flag broadcast;
    flag rxblock;
    flag txblock;
    struct {
        unsigned int rxblock:1;
        unsigned int txblock:1;
    } exist;
} __po_hi_c_mil_1553_conf_t;

#define __po_hi_c_mil_1553_conf_t_REQUIRED_BYTES_FOR_ENCODING        20
#define __po_hi_c_mil_1553_conf_t_REQUIRED_BITS_FOR_ENCODING        160
#define __po_hi_c_mil_1553_conf_t_REQUIRED_BYTES_FOR_ACN_ENCODING       23
#define __po_hi_c_mil_1553_conf_t_REQUIRED_BITS_FOR_ACN_ENCODING        180

#ifndef ERR___po_hi_c_mil_1553_conf_t_devname 
#define ERR___po_hi_c_mil_1553_conf_t_devname		1004 /* (SIZE (1..20)) */
#endif

void __po_hi_c_mil_1553_conf_t_Initialize(__po_hi_c_mil_1553_conf_t* pVal);
flag __po_hi_c_mil_1553_conf_t_IsConstraintValid(const __po_hi_c_mil_1553_conf_t* val, int* pErrCode);
flag __po_hi_c_mil_1553_conf_t_Equal(const __po_hi_c_mil_1553_conf_t* val1, const __po_hi_c_mil_1553_conf_t* val2);




#ifdef  __cplusplus
}
#define ENUM___po_hi_c_mil1553a	__po_hi_c_mil1553a
#define ENUM___po_hi_c_mil1553b	__po_hi_c_mil1553b
#define ENUM___po_hi_c_controller	__po_hi_c_controller
#define ENUM___po_hi_c_terminal	__po_hi_c_terminal
#define ENUM___po_hi_c_monitor	__po_hi_c_monitor
#define ENUM___po_hi_c_none	__po_hi_c_none
#define ENUM___po_hi_c_bus_a	__po_hi_c_bus_a
#define ENUM___po_hi_c_bus_b	__po_hi_c_bus_b
#define ENUM___po_hi_c_both	__po_hi_c_both
#endif

#endif
